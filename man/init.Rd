% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init.R
\name{init}
\alias{init}
\title{Start Using renv in a Project}
\usage{
init(
  project = NULL,
  ...,
  profile = NULL,
  settings = NULL,
  bare = FALSE,
  force = FALSE,
  repos = NULL,
  bioconductor = NULL,
  restart = interactive()
)
}
\arguments{
\item{project}{The project directory. The \R working directory will be
changed to match the requested project directory.}

\item{...}{Unused arguments, reserved for future expansion. If any arguments
are matched to \code{...}, \code{renv} will signal an error.}

\item{profile}{The profile to be activated. When \code{NULL}, the default
profile is activated instead. See \code{vignette("profiles", package = "renv")}
for more information.}

\item{settings}{A list of \link{settings} to be used with the newly-initialized
project.}

\item{bare}{Boolean; initialize the project without attempting to discover
and install R package dependencies?}

\item{force}{Boolean; force initialization? By default, \code{renv} will refuse
to initialize the home directory as a project, to defend against accidental
mis-usages of \code{init()}.}

\item{repos}{The \R repositories to be used in this project. By default,
the active repositories (as determined by \code{getOption("repos")}) are used.}

\item{bioconductor}{The version of Bioconductor to be used with this project.
Setting this may be appropriate if \code{renv} is unable to determine that your
project depends on a package normally available from Bioconductor. Set this
to \code{TRUE} to use the default version of Bioconductor recommended by the
\code{BiocManager} package.}

\item{restart}{Boolean; attempt to restart the \R session after initializing
the project? A session restart will be attempted if the \code{"restart"} \R
option is set by the frontend embedding \R.}
}
\value{
The project directory, invisibly. Note that this function is normally
called for its side effects.
}
\description{
Use \code{init()} to start using renv in the current project. This will:
\enumerate{
\item Activate the project to use the project library in both the current and
all future sessions (with \code{\link[=activate]{activate()}}).
\item Discover the packages that you currently and install them into a
project library (with \code{\link[=hydrate]{hydrate()}}).
\item Create a lockfile that records the state of the project library so it
can be restored by others (with \code{\link[=snapshot]{snapshot()}}).
}

If you call \code{init()} on a project that already uses \code{renv}, it will attempt
to do the right thing; it will restore the project library if it's missing,
or otherwise prompt you what to do.
}
\section{Infrastructure}{


\code{renv} will write or amend the following files in the project:
\itemize{
\item \code{.Rprofile}: An auto-loader will be installed, so that new R sessions
launched within the project are automatically loaded.
\item \code{renv/activate.R}: This script is run by the previously-mentioned
\code{.Rprofile} to load the project.
\item \code{renv/.gitignore}: This is used to instruct Git to ignore the project's
private library, as it should normally not be committed to a version
control repository.
\item \code{.Rbuildignore}: to ensure that the \code{renv} directory is ignored during
package development; e.g. when attempting to build or install a package
using \code{renv}.
}
}

\examples{

\dontrun{

# disable automatic snapshots
auto.snapshot <- getOption("renv.config.auto.snapshot")
options(renv.config.auto.snapshot = FALSE)

# initialize a new project (with an empty R library)
renv::init(bare = TRUE)

# install digest 0.6.19
renv::install("digest@0.6.19")

# save library state to lockfile
renv::snapshot()

# remove digest from library
renv::remove("digest")

# check library status
renv::status()

# restore lockfile, thereby reinstalling digest 0.6.19
renv::restore()

# restore automatic snapshots
options(renv.config.auto.snapshot = auto.snapshot)

}
}
